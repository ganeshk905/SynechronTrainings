#!/bin/bash

startInit=$(date +%s.%N)

startLinkingAndCleaning=$(date +%s.%N)
ln -s /opt/c9 /home/ec2-user/.c9
mkdir /home/ec2-user/environment
chown -R ec2-user:ec2-user /home/ec2-user/environment /home/ec2-user/.c9 /opt/c9

echo "ec2-user    ALL=(ALL) NOPASSWD: /sbin/poweroff, /sbin/reboot, /sbin/shutdown" >> /etc/sudoers

endLinkingAndCleaning=$(date +%s.%N)

startAuthKeys=$(date +%s.%N)
cat <<'EOF' >> /home/ec2-user/.ssh/authorized_keys
# Important
# ---------
# The following public key is required by Cloud9 IDE
# Removing this key will make this EC2 instance inaccessible by the IDE
#
cert-authority ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC5mNIiAK9qwXRPFafZP64F/K+0IRDsNKdMBRyz01zuimwtj+Pv8JWzbF5QJRz/7x/xpEgwJL9KUAqc9eD9Z8AguD9/DIB/Z9TBfUW4w2oYHAggd1tpqv7WVaWff1S+1dWE/IJNS9eP50kFHRpb49LLoFxu7AFw8itEmNYi29zKJ88iyQDQ1FErt/MpUNklFE0tOoxDFugDH3aHqSF44IcbbcbPyB3xLQAi8Uai8OlVp3i1YNFxTK/I8Epnifrdl97iz5T2rvF1qefPs5M7fuh5lNfw/uuxCIe7/kP3st3e5h2gnZk2R8YqDNkGja4xoEErq3kjZbcgjddI2m/poYTDImkPUGx13bdBAqrtpRB2iYc8CTWSC9ukfuxhgeuuWgfrS7I69rbqkZ7R4jGUi1jTqO1IZzM7xDQ4c+ZXZNtdAtUJ/+Sq0ot8R+K+/tDJeZFpO6uscfprw+Cmo9kXV0gqq1VGvTx0UVm/AyyTmdDtNr74UY5maaoY/YPBu0ZDdkP5eAtDnsB7ti1FS4e6AyDoqoRHK1n9+YYEWNvVPqJ5PGeVPPjHA8yraysw90rg3mx7cqvM2lPMoH42b9X6dkExJIH9+Z0RLWryAT/ExBe+VJulPCO96UoMySIqvB2MCNXTV+CEB8iAt4dtttORdIkJxKgQY+hfijKYu1wHw/sr1w== 8ad7f914751147cf8ede721202094d02@cloud9.amazon.com


#
# Add any additional keys below this line
#

EOF
endAuthKeys=$(date +%s.%N)


cat <<'EOF' >/home/ec2-user/.bashrc
# .bashrc

export PATH=$PATH:$HOME/.local/bin:$HOME/bin

# load nvm
export NVM_DIR="/home/ec2-user/.nvm"
[ "$BASH_VERSION" ] && npm() { 
    # hack: avoid slow npm sanity check in nvm
    if [ "$*" == "config get prefix" ]; then which node | sed "s/bin\/node//"; 
    else $(which npm) "$@"; fi 
}
# [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
rvm_silence_path_mismatch_check_flag=1 # prevent rvm complaints that nvm is first in PATH
unset npm # end hack


# User specific aliases and functions
alias python=python27

# modifications needed only in interactive mode
if [ "$PS1" != "" ]; then
    # Set default editor for git
    git config --global core.editor /usr/bin/nano

    # Turn on checkwinsize
    shopt -s checkwinsize

    # keep more history
    shopt -s histappend
    export HISTSIZE=100000
    export HISTFILESIZE=100000
    export PROMPT_COMMAND="history -a;"

    # Source for Git PS1 function
    if ! type -t __git_ps1 && [ -e "/usr/share/git-core/contrib/completion/git-prompt.sh" ]; then
        . /usr/share/git-core/contrib/completion/git-prompt.sh
    fi

    # Cloud9 default prompt
    _cloud9_prompt_user() {
        if [ "$C9_USER" = root ]; then
            echo "$USER"
        else
            echo "$C9_USER"
        fi
    }

    PS1='\[\033[01;32m\]$(_cloud9_prompt_user)\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]$(__git_ps1 " (%s)" 2>/dev/null) $ '
fi

EOF

cat <<'EOF' >/home/ec2-user/.bashr_profile
# .bash_profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
	. ~/.bashrc
fi

# User specific environment and startup programs

EOF

cat <<'EOF' >>/home/ec2-user/environment/README.md
         ___        ______     ____ _                 _  ___  
        / \ \      / / ___|   / ___| | ___  _   _  __| |/ _ \ 
       / _ \ \ /\ / /\___ \  | |   | |/ _ \| | | |/ _` | (_) |
      / ___ \ V  V /  ___) | | |___| | (_) | |_| | (_| |\__, |
     /_/   \_\_/\_/  |____/   \____|_|\___/ \__,_|\__,_|  /_/ 
 ----------------------------------------------------------------- 


Hi there! Welcome to AWS Cloud9!

To get started, create some files, play with the terminal,
or visit https://docs.aws.amazon.com/console/cloud9/ for our documentation.

Happy coding!

EOF

chown ec2-user:ec2-user /home/ec2-user/environment/README.md

# Fix for permission error when trying to call `gem install`
chown ec2-user -R /usr/local/rvm/gems

endInit=$(date +%s.%N)

durationInit=$(echo "$endInit - $startInit" | bc)
durationCurl=$(echo "$endCurl - $startCurl" | bc)
durationTar=$(echo "$endTar - $startTar" | bc)
durationLinkingAndCleaning=$(echo "$endLinkingAndCleaning - $startLinkingAndCleaning" | bc)
durationAuthKeys=$(echo "$endAuthKeys - $startAuthKeys" | bc)

printf "Curl Execution time: %.6f seconds\n\
Tar Execution time: %.6f seconds\n\
Linking and cleaning Execution time: %.6f seconds\n\
Auth Keys Execution time: %.6f seconds\n\
Total Execution time: %.6f seconds\n" \
$durationCurl $durationTar $durationLinkingAndCleaning \
$durationAuthKeys $durationInit > /opt/c9/bmark.txt
#This script is appended to another bash script, so it does not need a bash script file header.

C9_DIR=/home/ec2-user/.c9
CONFIG_FILE_PATH=$C9_DIR/autoshutdown-configuration
VFS_CHECK_FILE_PATH=$C9_DIR/stop-if-inactive.sh

echo "SHUTDOWN_TIMEOUT=30" > $CONFIG_FILE_PATH
chmod a+w "$CONFIG_FILE_PATH"

echo -e '
#!/bin/bash
set -euo pipefail
CONFIG=$(cat '$CONFIG_FILE_PATH')
SHUTDOWN_TIMEOUT=${CONFIG#*=}
if ! [[ $SHUTDOWN_TIMEOUT =~ ^[0-9]*$ ]]; then
    echo "shutdown timeout is invalid"
    exit 1
fi
is_shutting_down() {
    pgrep shutdown >/dev/null
}
is_vfs_connected() {
    pgrep vfs-worker >/dev/null
}

if is_shutting_down; then
    if [[ ! $SHUTDOWN_TIMEOUT =~ ^[0-9]+$ ]] || is_vfs_connected; then
        sudo shutdown -c
    fi
else
    if [[ $SHUTDOWN_TIMEOUT =~ ^[0-9]+$ ]] && ! is_vfs_connected; then
        sudo shutdown -h $SHUTDOWN_TIMEOUT
    fi
fi' > "$VFS_CHECK_FILE_PATH"

chmod +x "$VFS_CHECK_FILE_PATH"

echo "* * * * * root $VFS_CHECK_FILE_PATH" > /etc/cron.d/c9-automatic-shutdown
